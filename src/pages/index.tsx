import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";

import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();
  console.log(user)
  if (!user) return null;
  return(
  <div className="flex gap-3 w-full ">
    <Image 
      className="h-14 w-14 rounded-full" 
      width={120}
      height={120}
      src={user.imageUrl} 
      alt="Profile image"
    />
    <input placeholder="What's on your mind?" className="bg-transparent outline-none"/>
  </div>
  )
}


type PostWithUser = RouterOutputs["post"]["getAll"][number];
const PostView = (props : PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
         <Image 
          className="h-14 w-14 rounded-full" 
          width={120}
          height={120}
          src={author.profilePicture} 
          alt="Profile image"
        />
        <div className="flex flex-col">
          <div className="flex gap-3 text-slate-300">
            <span>{`@${author.username}`}</span>
          </div>
          <span>{post.content}</span>
        </div>
    </div>
  )

}

export default function Home() {
  const user = useUser();
  const { data, isLoading } = api.post.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something Went Wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-slate-400 border-x md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            
            
              {user.isSignedIn && (
              <div className="flex justify-center"> 
                <SignOutButton />
                <CreatePostWizard />
              </div>
              )}
              {!user.isSignedIn && <SignInButton />}
          </div>
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id}/> 
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
